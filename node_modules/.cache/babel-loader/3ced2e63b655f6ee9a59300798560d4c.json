{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _recompose = require('recompose');\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _Typeahead = require('./Typeahead.component');\n\nvar _Typeahead2 = _interopRequireDefault(_Typeahead);\n\nvar _finder = require('./finder');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar AddressTypeaheadComponent = function AddressTypeaheadComponent(props) {\n  var searchStr = props.searchStr,\n      setSearchStr = props.setSearchStr,\n      fieldType = props.fieldType,\n      options = props.options;\n\n  if (!fieldType) {\n    console.warn('No field type provide');\n    return _react2.default.createElement('div', null);\n  }\n\n  return _react2.default.createElement(_Typeahead2.default, {\n    displayOption: props.renderResult,\n    filterOption: fieldType,\n    options: options,\n    maxVisible: 5,\n    value: searchStr,\n    onChange: function onChange(e) {\n      return setSearchStr(e.target.value);\n    },\n    onOptionSelected: function onOptionSelected(option) {\n      return props.onOptionSelected(option);\n    }\n  });\n};\n\nvar AddressTypeahead = (0, _recompose.compose)((0, _recompose.withState)('searchStr', 'setSearchStr', ''), (0, _recompose.lifecycle)({\n  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n    if (nextProps.value !== this.props.value) {\n      this.props.setSearchStr(nextProps.value);\n    }\n  }\n}), (0, _recompose.withProps)(function (_ref) {\n  var searchStr = _ref.searchStr,\n      fieldType = _ref.fieldType;\n  return {\n    options: (0, _finder.resolveResultbyField)(fieldType, searchStr)\n  };\n}), (0, _recompose.defaultProps)({\n  renderResult: function renderResult(data) {\n    return _react2.default.createElement('span', null, data.d + ' \\xBB ' + data.a + ' \\xBB ' + data.p + ' \\xBB ', data.z || _react2.default.createElement('li', null, 'ไม่มีรหัสไปรษณีย์'));\n  },\n  value: ''\n}))(AddressTypeaheadComponent);\nexports.default = AddressTypeahead;","map":null,"metadata":{},"sourceType":"script"}