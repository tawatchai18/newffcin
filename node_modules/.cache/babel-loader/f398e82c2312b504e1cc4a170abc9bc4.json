{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ReactCaptchaGenerator = function (_Component) {\n  _inherits(ReactCaptchaGenerator, _Component);\n\n  function ReactCaptchaGenerator(props) {\n    _classCallCheck(this, ReactCaptchaGenerator);\n\n    var _this = _possibleConstructorReturn(this, (ReactCaptchaGenerator.__proto__ || Object.getPrototypeOf(ReactCaptchaGenerator)).call(this, props));\n\n    _this.state = {\n      height: 100,\n      width: 100,\n      textColor: false,\n      fontFamily: 'Verdana',\n      fontSize: '30',\n      paddingLeft: '20',\n      paddingTop: '60',\n      lenght: '5',\n      background: 'none'\n    };\n    _this.setData = _this.setData.bind(_this);\n    return _this;\n  }\n\n  _createClass(ReactCaptchaGenerator, [{\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      this.setData();\n    } // componentDidUpdate() {\n    //     this.setData()\n    // }\n    // componentDidUpdate(previousProps, previousState) {\n    //     if (previousProps.data !== this.props.data) {\n    //         this.setData()\n    //     }\n    // }\n\n  }, {\n    key: 'setData',\n    value: function setData() {\n      this.setState({\n        height: this.props.height ? this.props.height : 100,\n        width: this.props.width ? this.props.width : 100,\n        textColor: this.props.textColor ? this.props.textColor : false,\n        fontFamily: this.props.fontFamily ? this.props.fontFamily : 'Verdana',\n        fontSize: this.props.fontSize ? this.props.fontSize : '30',\n        paddingLeft: this.props.paddingLeft ? this.props.paddingLeft : '20',\n        paddingTop: this.props.paddingTop ? this.props.paddingTop : '60',\n        lenght: this.props.lenght ? this.props.lenght : '5',\n        background: this.props.background ? this.props.background : 'none'\n      });\n      this.text = [];\n      this.originText = [];\n      this.possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n      for (var i = 0; i < this.state.lenght; i++) {\n        var char = this.possible.charAt(Math.floor(Math.random() * this.possible.length));\n        this.text.push('<text \\n                    font-family=\"' + this.state.fontFamily + '\" \\n                    font-size=\"' + this.state.fontSize + '\" \\n                    x=\"' + this.state.paddingLeft * i + '\" \\n                    y=\"' + this.state.paddingTop + '\"\\n                    fill=\"' + (this.props.textColor ? this.props.textColor : \"#\" + ((1 << 24) * Math.random() | 0).toString(16)) + '\"\\n                    transform=\"rotate(' + (Math.random() * (5 - 0) + 0) + ')\"\\n                >' + char + '</text>');\n        this.originText.push(char);\n      }\n\n      this.props.result(this.originText.join(''));\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement('img', {\n        style: {\n          background: this.state.background\n        },\n        src: 'data:image/svg+xml;base64,' + btoa('<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'height=\"' + this.state.height + '\" ' + 'width=\"' + this.state.width + '\">' + this.text.join() + '</svg>'),\n        alt: ''\n      });\n    }\n  }]);\n\n  return ReactCaptchaGenerator;\n}(_react.Component);\n\nexports.default = ReactCaptchaGenerator;","map":null,"metadata":{},"sourceType":"script"}