{"ast":null,"code":"import { Base64 } from 'js-base64';\nvar API = 'https://ffcmaekawtom.herokuapp.com/v1';\nexport function PostData(type, userData, id) {\n  return new Promise(function (resolve, reject) {\n    var url = API + \"/org/\".concat(id, \"/authorize\");\n    fetch(url, {\n      method: 'post',\n      body: JSON.stringify(userData),\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        'Authorization': 'Basic ' + Base64.encode(userData.username + ':' + userData.password)\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (res) {\n      resolve(res);\n    }).catch(function (error) {\n      reject('Username or password is incorrect');\n    });\n  });\n}\nexport function SignupData(type, userData) {\n  return new Promise(function (resolve, reject) {\n    fetch(API + '/org', {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    });\n  });\n}\nexport function Data() {\n  return new Promise(function (resolve, reject) {\n    fetch(API + '/org', {\n      method: 'GET'\n    }).then(function (response) {\n      return response.json();\n    }).then(function (res) {\n      resolve(res);\n    }).catch(function (error) {\n      reject(error);\n    });\n  });\n} //show user หน้า users\n\nexport function CreatData(id, token) {\n  console.log(token, 'ppppl;k');\n  return new Promise(function (resolve, reject) {\n    fetch(API + \"/org/\".concat(id, \"/user\"), {\n      method: 'GET',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        // 'Authorization': 'Bearer 0lI41NtRAJTIgjjYHnGZHoyUKH92QAy9AW9z0lBhJJSrBA9QYAw4xT0sC2BxMRhd',\n        \"Authorization\": \"Bearer \".concat(token)\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (res) {\n      resolve(res);\n    }).catch(function (error) {\n      reject(error);\n    });\n  });\n} //สมัคร user ใหม่\n\nexport function CreatUser(id, token, userData) {\n  console.log(id, 'opopopop');\n  console.log(token, '===12');\n  return new Promise(function (resolve, reject) {\n    fetch(API + \"/org/\".concat(id, \"/user\"), {\n      method: 'POST',\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \".concat(token) // \"Authorization\": 'Bearer 0lI41NtRAJTIgjjYHnGZHoyUKH92QAy9AW9z0lBhJJSrBA9QYAw4xT0sC2BxMRhd',\n\n      }),\n      body: JSON.stringify(userData)\n    }).then(function (response) {\n      return response.json();\n    }).then(function (res) {\n      resolve(res);\n    }).catch(function (error) {\n      reject(error);\n    });\n  });\n}","map":{"version":3,"sources":["/Users/tawatchai/newffcin/src/services/PostData.js"],"names":["Base64","API","PostData","type","userData","id","Promise","resolve","reject","url","fetch","method","body","JSON","stringify","headers","Headers","encode","username","password","then","response","json","res","catch","error","SignupData","Data","CreatData","token","console","log","CreatUser"],"mappings":"AACA,SAASA,MAAT,QAAuB,WAAvB;AAEA,IAAMC,GAAG,GAAG,uCAAZ;AAEA,OAAO,SAASC,QAAT,CAAkBC,IAAlB,EAAwBC,QAAxB,EAAkCC,EAAlC,EAAsC;AAC3C,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAIC,GAAG,GAAGR,GAAG,kBAAWI,EAAX,eAAb;AACAK,IAAAA,KAAK,CAACD,GAAD,EAAM;AACTE,MAAAA,MAAM,EAAE,MADC;AAETC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,QAAf,CAFG;AAGTW,MAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACnB,wBAAgB,kBADG;AAEnB,yBAAiB,WAAWhB,MAAM,CAACiB,MAAP,CAAcb,QAAQ,CAACc,QAAT,GAAoB,GAApB,GAA0Bd,QAAQ,CAACe,QAAjD;AAFT,OAAZ;AAHA,KAAN,CAAL,CAOGC,IAPH,CAOQ,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KAPR,EAQGF,IARH,CAQQ,UAACG,GAAD,EAAS;AACbhB,MAAAA,OAAO,CAACgB,GAAD,CAAP;AACD,KAVH,EAWGC,KAXH,CAWS,UAACC,KAAD,EAAW;AAChBjB,MAAAA,MAAM,CAAC,mCAAD,CAAN;AACD,KAbH;AAeD,GAjBM,CAAP;AAkBD;AAGD,OAAO,SAASkB,UAAT,CAAoBvB,IAApB,EAA0BC,QAA1B,EAAoC;AACzC,SAAO,IAAIE,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCE,IAAAA,KAAK,CAACT,GAAG,GAAG,MAAP,EAAe;AAClBU,MAAAA,MAAM,EAAE,MADU;AAElBI,MAAAA,OAAO,EAAE;AACP,kBAAU,kBADH;AAEP,wBAAgB;AAFT,OAFS;AAMlBH,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,QAAf;AANY,KAAf,CAAL;AAQD,GATM,CAAP;AAUD;AAED,OAAO,SAASuB,IAAT,GAAgB;AACrB,SAAO,IAAIrB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCE,IAAAA,KAAK,CAACT,GAAG,GAAG,MAAP,EAAe;AAClBU,MAAAA,MAAM,EAAE;AADU,KAAf,CAAL,CAGGS,IAHH,CAGQ,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KAHR,EAIGF,IAJH,CAIQ,UAACG,GAAD,EAAS;AACbhB,MAAAA,OAAO,CAACgB,GAAD,CAAP;AACD,KANH,EAOGC,KAPH,CAOS,UAACC,KAAD,EAAW;AAChBjB,MAAAA,MAAM,CAACiB,KAAD,CAAN;AACD,KATH;AAWD,GAZM,CAAP;AAaD,C,CAED;;AACA,OAAO,SAASG,SAAT,CAAmBvB,EAAnB,EAAuBwB,KAAvB,EAA8B;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAAkB,SAAlB;AACA,SAAO,IAAIvB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCE,IAAAA,KAAK,CAACT,GAAG,kBAAWI,EAAX,UAAJ,EAA0B;AAC7BM,MAAAA,MAAM,EAAE,KADqB;AAE7BI,MAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACnB,wBAAgB,kBADG;AAEnB;AACA,0CAA2Ba,KAA3B;AAHmB,OAAZ;AAFoB,KAA1B,CAAL,CAQGT,IARH,CAQQ,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KARR,EASGF,IATH,CASQ,UAACG,GAAD,EAAS;AACbhB,MAAAA,OAAO,CAACgB,GAAD,CAAP;AACD,KAXH,EAYGC,KAZH,CAYS,UAACC,KAAD,EAAW;AAChBjB,MAAAA,MAAM,CAACiB,KAAD,CAAN;AACD,KAdH;AAeD,GAhBM,CAAP;AAiBD,C,CAED;;AACA,OAAO,SAASO,SAAT,CAAmB3B,EAAnB,EAAuBwB,KAAvB,EAA8BzB,QAA9B,EAAwC;AAC7C0B,EAAAA,OAAO,CAACC,GAAR,CAAY1B,EAAZ,EAAe,UAAf;AACAyB,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAAmB,OAAnB;AACA,SAAO,IAAIvB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCE,IAAAA,KAAK,CAACT,GAAG,kBAAWI,EAAX,UAAJ,EAA0B;AAC7BM,MAAAA,MAAM,EAAE,MADqB;AAE7BI,MAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACnB,wBAAgB,kBADG;AAEnB,0CAA2Ba,KAA3B,CAFmB,CAGnB;;AAHmB,OAAZ,CAFoB;AAO7BjB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,QAAf;AAPuB,KAA1B,CAAL,CASGgB,IATH,CASQ,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KATR,EAUGF,IAVH,CAUQ,UAACG,GAAD,EAAS;AACbhB,MAAAA,OAAO,CAACgB,GAAD,CAAP;AACD,KAZH,EAaGC,KAbH,CAaS,UAACC,KAAD,EAAW;AAChBjB,MAAAA,MAAM,CAACiB,KAAD,CAAN;AACD,KAfH;AAgBD,GAjBM,CAAP;AAkBD","sourcesContent":["\nimport { Base64 } from 'js-base64';\n\nconst API = 'https://ffcmaekawtom.herokuapp.com/v1'\n\nexport function PostData(type, userData, id) {\n  return new Promise((resolve, reject) => {\n    let url = API + `/org/${id}/authorize`\n    fetch(url, {\n      method: 'post',\n      body: JSON.stringify(userData),\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        'Authorization': 'Basic ' + Base64.encode(userData.username + ':' + userData.password),\n      })\n    }).then((response) => response.json())\n      .then((res) => {\n        resolve(res);\n      })\n      .catch((error) => {\n        reject('Username or password is incorrect');\n      });\n\n  });\n}\n\n\nexport function SignupData(type, userData) {\n  return new Promise((resolve, reject) => {\n    fetch(API + '/org', {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    })\n  });\n}\n\nexport function Data() {\n  return new Promise((resolve, reject) => {\n    fetch(API + '/org', {\n      method: 'GET',\n    })\n      .then((response) => response.json())\n      .then((res) => {\n        resolve(res);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n\n  });\n}\n\n//show user หน้า users\nexport function CreatData(id, token) {\n  console.log(token,'ppppl;k');\n  return new Promise((resolve, reject) => {\n    fetch(API + `/org/${id}/user`, {\n      method: 'GET',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        // 'Authorization': 'Bearer 0lI41NtRAJTIgjjYHnGZHoyUKH92QAy9AW9z0lBhJJSrBA9QYAw4xT0sC2BxMRhd',\n        \"Authorization\": `Bearer ${token}`,\n      }),\n    })\n      .then((response) => response.json())\n      .then((res) => {\n        resolve(res);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n}\n\n//สมัคร user ใหม่\nexport function CreatUser(id, token, userData) {\n  console.log(id,'opopopop');\n  console.log(token, '===12')\n  return new Promise((resolve, reject) => {\n    fetch(API + `/org/${id}/user`, {\n      method: 'POST',\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${token}`,\n        // \"Authorization\": 'Bearer 0lI41NtRAJTIgjjYHnGZHoyUKH92QAy9AW9z0lBhJJSrBA9QYAw4xT0sC2BxMRhd',\n      }),\n      body: JSON.stringify(userData),\n    })\n      .then((response) => response.json())\n      .then((res) => {\n        resolve(res);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n}\n"]},"metadata":{},"sourceType":"module"}